name: Deploy Docker Image to EC2

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch
  workflow_dispatch:  # Enable manual triggering of the workflow through GitHub Actions interface

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use Ubuntu for running GitHub Actions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Clone the repository to access files and scripts

      - name: Log in to Docker Hub  # Log in to Docker Hub to access container images
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Docker Hub username from secrets
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}  # Docker Hub access token from secrets

      - name: Set up SSH for EC2  # Set up SSH connection to access EC2
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEAnJaPB1FtLt2/M1McmlLU7JvBg+pVYtvz/e/w8nCbxkXvt5Rz
            IXwIect2412j0IPH+Y0GVZ2IeJBAktQ+HzRZXyb2T0nEi7+dALQDHhtonCikMT+s
            ioYhLH0OoWy2er73MmCOjh9q2Qq0q62PrfzWocTR7T8LewE5PevBFROtc5AKDm4p
            k5SsmZ9IyyjacjGtPLecd3QeVDxEckrXcI7qXQnWTnm0mtfhvKPUtf9bZhcCgDKa
            vgNqyvsoOSvOspDZpdszgZ8fDEfmohmQyJZGN46hwmPY6/zhbl18t7FwfL/pGP3k
            o5eouBtEXnc6uncueWA7gIzdy5G4mfc9QHSvXwIDAQABAoIBAH8wC5z2FqkqlFMr
            /t+ayDgni1eKzzAtWFG6wwspTF4QEFYczic0h+3lxfuH47dKUvPwCGUiP+ctxEV+
            /7Z43t7a1tYwJOUeDnizvpSFzsKIgFVAUvVxXSC1s1yK4O1yj3br1t65xh/lAjsw
            DrRT2kIrjBgYTUrsA4K4K2zjPs/NtMjQV3u80PKbu852vYaJYb1WauihX/T4QbS0
            55mPaSc3A5cEVN8QtoF953e0GVu/lz3RXeZONBH0g6FHEIrpt3bsBpyhGxn9HGfh
            MqbCjWfEWC5FqrteTWPpx5xcR+OWDkOLWEu8KdX83Au+OcDnJlEbCmVhHbFU930u
            tmpJBwECgYEA7+Dpa+z5lURNV7EtNp1ZhdUm7GQ+R5s5zDUI7dWCXwejr+g4JUw4
            PVhUXZb+kzA8IVgbIgMQQlcaaZQKVPztbdjchBAIpZfnfONF3jZ3UbPSHR+G88+D
            scE4W+fcIp8rUzd/XQjYabxYZV0bu+5au4RNmlCS4gg4EJLw+N0KxvcCgYEApxyk
            hKcL/LZxMIh3KGw9wpKdpuxLHI8wOHcqieRYUr8Lm/uSELbb3T6V56qa0sCzKTDS
            eLGBEugt5RcdFKtun+PodbFDGsHmHWQKvYkrjeVLtxmtm1CZdiX+NwUPr5Z99FMY
            +xERoOz0kY5ZsviU6X3gZ8iVF5sYNazQT4CUONkCgYEA79h6jCcOBmmcy6mkA4+h
            C2fs2z//5akXSU9d9jAdgtcom6IdQW3Mbcn70PhA4vq/pLdrqb5Wa36cMiSLkB61
            Z7gGBSXi/2+7TewQ1/atp0udMvFrBizfCMShjYNvYE62CybaejN174Ma/37xVB8n
            KYdH8JvPwaFmLWw+9RZOyFECgYB+fVmx5tdV86p9d+3ptPSSgHPAU38PIPr44opa
            UXLhPyZEbQlEiYSmVKcW8bW67I0wEnpdTM5MR13l17b1XEWh1NqxqvkGGdpaSM0w
            ZdGH2BWVhGQ5+aoPGfbwIm6bE6hG9VclQug7DOCaBEu1Ah+FFPh01gi0E3shtar/
            Ym3PEQKBgQCHeE0qOcAtPgvBErO5ehbRoRjaptpcH2SHpj71CegYogBMBD+8K1K6
            QtLfhi8TzMVjYGH9k3lmH1ra9HTsxw2QxRyK7tMZIulqg/FaW7QEE7a5eBQkIwp6
            srZHLQ2pf8lUkepfK3s67Pm7R6MZjkNo6zKOBWkibUriZJLFDinCeA==
            -----END RSA PRIVATE KEY-----

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7  # Connect to EC2 via SSH
        with:
          host: ec2-18-159-134-62.eu-central-1.compute.amazonaws.com  # Public IP or DNS name of your EC2
          username: ec2-user  # Default username for Amazon Linux
          port: 22  # SSH port, default is 22
          key: ${{ secrets.EC2_SSH_KEY }}  # SSH key from GitHub secrets for connecting
          script: |
            # Stop and remove old containers if they are running
            docker stop mlops_classification-app || true
            docker rm mlops_classification-app || true
            docker stop mlops_classification-data_container || true
            docker rm mlops_classification-data_container || true

            # Authenticate with Docker if needed
            echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

            # Pull new versions of the containers from Docker Hub
            docker pull vitmer/mlops_classification-data_container:latest
            docker pull vitmer/mlops_classification-app:latest

            # Run new data container
            docker run -d --name mlops_classification-data_container vitmer/mlops_classification-data_container:latest

            # Run new application container with port 8000 exposed
            docker run -d --name mlops_classification-app --network="host" -p 8000:8000 vitmer/mlops_classification-app:latest